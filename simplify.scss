@import './scss/variables';


@each $screen, $size in map-merge(('base': auto ), map-deep-get($config, 'screens')) {
  $prefix: '';
  @if $screen != 'base' {
    $prefix:'#{$screen}\\:';
  }
  @include screen ($screen, $size){
    @each $name in map-deep-get($plugins, 'textAligns') {
      .#{$prefix}text-#{$name} {
        text-align: $name;
      }
    }

    @each $name, $value in map-deep-get($plugins, 'textTransforms'){
      .#{$prefix}text-#{$name} {
        text-transform: $value;
      }
    }

    @each $name, $value in  map-deep-get($plugins, 'textDecorations') {
      .#{$prefix}text-#{$name} {
        text-decoration: $value;
      }
    }

    @each $name, $value in map-deep-get($config, 'fontSizes') {    
      .#{$prefix}text-#{$name} {
        font-size: $value;
      }
    }
    @each $name, $value in map-deep-get($config, 'fontWeight') {
      .#{$prefix}font-weight-#{$name} {
        font-weight: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'backgroundPosition') {
      .#{$prefix}bg-#{$name} {
        background-position: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'backgroundSize') {
      .#{$prefix}bg-#{$name} {
        background-size: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'backgroundAttachment') {
      .#{$prefix}bg-#{$name} {
        background-attachment: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'backgroundRepeat') {
      .#{$prefix}bg-#{$name} {
        background-repeat: $value;
      }
    }
    @each $name, $value in map-deep-get($config, 'borderWidths') {
      @if $name == 'default' {
        .#{$prefix}border{
          border-width: $value;
        }
      } @else {
        .#{$prefix}border-#{$name} {
          border-width: $value;
        }
      }
    }
    @each $name, $value in map-deep-get($config, 'borderStyle') {
      .#{$prefix}border-#{$name} {
        border-style: $value;
      }
    }

    @each $name, $value in map-deep-get($config, 'borderRadius') {
      @if $name == 'default' {
        .#{$prefix}border-rounded{
          border-radius: $value;
        }
      } @else {
        .#{$prefix}border-rounded-#{$name} {
          border-radius: $value;
        }
      }
    }
    @each $name, $value in map-deep-get($plugins, 'display') {
      .#{$prefix}display-#{$name} {
        display: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'alignContent') {
      .#{$prefix}align-content-#{$name} {
        align-content: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'alignItems') {
      .#{$prefix}align-items-#{$name} {
        align-items: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'alignSelf') {
      .#{$prefix}align-self-#{$name} {
        align-self: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'appearance') {
      .#{$prefix}appearance-#{$name} {
        appearance: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'flexDirection') {
      .#{$prefix}flex-direction-#{$name} {
        flex-direction: $value;
      }
    }

     @each $name, $value in map-deep-get($plugins, 'flex') {
      .#{$prefix}flex-#{$name} {
        flex: $value;
      }
    }

    @each $name, $value in map-deep-get($plugins, 'flexGrow') {
      .#{$prefix}flex-grow-#{$name} {
        flex-grow: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'flexShrink') {
      .#{$prefix}flex-shrink-#{$name} {
        flex-shrink: $value;
      }
    }

    @each $name, $value in map-deep-get($plugins, 'flexShrink') {
      .#{$prefix}flex-shrink-#{$name} {
        flex-shrink: $value;
      }
    }

    @each $name, $value in map-deep-get($plugins, 'flexWrap') {
      .#{$prefix}flex-wrap-#{$name} {
        flex-wrap: $value;
      }
    }

    @each $name, $value in map-deep-get($plugins, 'order') {
      .#{$prefix}order-#{$name} {
        order: $value;
      }
    }
    
    




    @each $name, $value in map-deep-get($config, 'zIndex') {
      .#{$prefix}z-index-#{$name} {
        z-index: $value;
      }
    }
    @each $name, $value in map-deep-get($plugins, 'boxShadow') {
      @if $name == 'default' and $prefix == '' {
        .#{$prefix}box-shadow{
          box-shadow: $value;
        }
      } @else {
        .#{$prefix}box-shadow-#{$name} {
          box-shadow: $value;
        }
      }
    }
    @each $name, $value in map-deep-get($config, 'opacity') {
      .#{$prefix}opacity-#{$name}{
        opacity: $value;
      }
    }

    @each $name, $value in map-merge(map-deep-get($config, 'spacings'), ('auto': auto )){
      @if $name != 'auto' {
        .#{$prefix}p-#{$name} {
          padding: $value;
        }
        .#{$prefix}m-#{$name} {
          margin: $value;
        }
        @if $name != '0'{
          .#{$prefix}-m-#{$name} {
            margin: -$value;
          }
        }
      }
      @each $name1, $value1 in map-deep-get($plugins, 'directions'){
        @if $name1 == 'x'{
          @if $name != 'auto' {
            .#{$prefix}p-#{$name1}-#{$name} {
              padding-left: $value;
              padding-right: $value;
            }
          }
          .#{$prefix}m-#{$name1}-#{$name} {
            margin-left: $value;
            margin-right: $value;
          }
          @if $name != '0' and $name != 'auto' {
            .#{$prefix}-m-#{$name1}-#{$name} {
              margin-left: -$value;
              margin-right: -$value;
            }
          }
        } @else if $name1 == 'y' {
          @if $name != 'auto' {
            .#{$prefix}p-#{$name1}-#{$name} {
              padding-top: $value;
              padding-bottom: $value;
            }
          }
          .#{$prefix}m-#{$name1}-#{$name} {
            margin-top: $value;
            margin-bottom: $value;
          }
          @if $name != '0' and $name != 'auto'{
            .#{$prefix}-m-#{$name1}-#{$name} {
              margin-top: -$value;
              margin-bottom: -$value;
            }
          }
        } @else {
          @if $name != 'auto' {
            .#{$prefix}p-#{$name1}-#{$name} {
              padding-#{$value1}: $value;
            }
          }
          .#{$prefix}m-#{$name1}-#{$name} {
            margin-#{$value1}: $value;
          }
          @if $name != '0' and $name != 'auto' {
            .#{$prefix}-m-#{$name1}-#{$name} {
              margin-#{$value1}: -$value;
            }
          }
        }
      }
    }
    
    @each $name, $value in map-merge(map-deep-get($config, 'spacings'), map-deep-get($config, 'width')){
      .#{$prefix}w-#{$name}{
        width: $value;
      }
    }
    
    @each $name, $value in map-merge(map-deep-get($config, 'spacings'), map-deep-get($plugins, 'width')) {  
      .#{$prefix}min-w-#{$name}{
        min-width: $value;
      }
      .#{$prefix}max-w-#{$name}{
        max-width: $value;
      }
    }
   
    @each $name, $value in map-merge(map-deep-get($config, 'spacings'), map-deep-get($plugins, 'height')) {
      .#{$prefix}h-#{$name}{
        height: $value;
      }
      .#{$prefix}min-h-#{$name}{
        min-height: $value;
      }
      .#{$prefix}max-w-#{$name}{
        max-height: $value;
      }
    }

    @each $varName in map-deep-get($plugins, 'variants') {
      $varPrefix : '';
      $varPostfix : '';
      @if $varName != 'normal' {
        $varPrefix:'#{$varName}\\:';
        $varPostfix: '\:#{$varName}';
      }
      /* ----------------- TYPOGRAPHY -----------------*/ 
      @each $name, $value in map-deep-get($config, 'colors') {
        .#{$prefix}#{$varPrefix}text-#{$name}#{$varPostfix} {
          color: $value;
        }
        .#{$prefix}#{$varPrefix}border-#{$name}#{$varPostfix} {
          border-color: $value;
        }
        .#{$prefix}#{$varPrefix}bg-#{$name}#{$varPostfix} {
          background-color: $value;
        }
        @if map-deep-get($config, 'useColorWithOpacity') == true {
          @each $name1, $value1 in map-deep-get($config, 'opacity') {
            .#{$prefix}#{$varPrefix}text-#{$name}-opacity-#{$name1}#{$varPostfix} {
              color: rgba($value, $value1);
            }
            .#{$prefix}#{$varPrefix}border-#{$name}-opacity-#{$name1}#{$varPostfix} {
              border-color: rgba($value, $value1);
            }
            .#{$prefix}#{$varPrefix}bg-#{$name}-opacity-#{$name1}#{$varPostfix} {
              background-color: rgba($value, $value1);
            }
          }
        }
      }
    }
  }
}
